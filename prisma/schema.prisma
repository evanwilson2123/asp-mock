generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model BlastMotion {
  id                     Int      @id @default(autoincrement())
  sessionId              String
  sessionName            String   @default("")
  athlete                String
  date                   DateTime @default(now())
  swingId                String
  equipment              String?
  handedness             String?
  swingDetails           String?
  planeScore             Float?
  connectionScore        Float?
  rotationScore          Float?
  batSpeed               Float?
  rotationalAcceleration Float?
  onPlaneEfficiency      Float?
  attackAngle            Float?
  earlyConnection        Float?
  connectionAtImpact     Float?
  verticalBatAngle       Float?
  power                  Float?
  timeToContact          Float?
  peakHandSpeed          Float?
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  playLevel              String   @default("None")
}

model HitTrax {
  id                 Int      @id @default(autoincrement())
  sessionId          String
  sessionName        String   @default("")
  athlete            String?
  AB                 Int?
  date               DateTime?
  swingId            String
  timestamp          String?
  pitch              Float?
  strikeZone         String?
  pType              String?
  velo               Float?
  LA                 Float?
  dist               Float?
  res                String?
  type               String?
  horizAngle         Float?
  pts                Float?
  strikeZoneBottom   Float?
  strikeZoneTop      Float?
  strikeZoneWidth    Float?
  verticalDistance   Float?
  horizontalDistance Float?
  POIX               Float?
  POIY               Float?
  POIZ               Float?
  sprayChartX        Float?
  sprayChartZ        Float?
  fieldedX           Float?
  fieldedZ           Float?
  batMaterial        String?
  user               String?
  pitchAngle         Float?
  batting            String?
  level              String?
  opposingPlayer     String?
  tag                String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  playLevel          String
}

model ArmCare {
  id                   Int       @id @default(autoincrement())
  sessionId            String
  sessionName          String    @default("")
  examDate             DateTime?
  email                String?
  armCareId            String?
  lastName             String?
  firstName            String?
  gender               String?
  dob                  DateTime?
  heightFt             Float?
  heightIn             Float?
  weightLbs            Float?
  country              String?
  stateProv            String?
  position1            String?
  position2            String?
  position3            String?
  position4            String?
  position5            String?
  playingLevel         String?
  throws               String?
  bats                 String?
  surgery              String?
  time                 String?
  timezone             String?
  examType             String?
  armScore             Float?
  totalStrength        Float?
  irtarmStrength       Float?
  irtarmRs             Float?
  irtarmRecovery       String?
  ertarmStrength       Float?
  ertarmRs             Float?
  ertarmRecovery       String?
  starmStrength        Float?
  starmRs              Float?
  starmRecovery        String?
  gtarmStrength        Float?
  gtarmRs              Float?
  gtarmRecovery        String?
  shoulderBalance      Float?
  velo                 Float?
  svr                  Float?
  totalStrengthPost    Float?
  postStrengthLoss     Float?
  totalPctFresh        Float?
  irtarmPostStrength   Float?
  irtarmPostLoss       Float?
  irtarmPctFresh       Float?
  ertarmPostStrength   Float?
  ertarmPostLoss       Float?
  ertarmPctFresh       Float?
  starmPostStrength    Float?
  starmPostLoss        Float?
  starmPctFresh        Float?
  gtarmPostStrength    Float?
  gtarmPostLoss        Float?
  gtarmPctFresh        Float?
  irtarmPeakForceLbs1  Float?
  irtarmPeakForceLbs2  Float?
  irtarmPeakForceLbs3  Float?
  irtarmMaxLbs         Float?
  irntarmPeakForceLbs1 Float?
  irntarmPeakForceLbs2 Float?
  irntarmPeakForceLbs3 Float?
  irntarmMaxLbs        Float?
  ertarmPeakForceLbs1  Float?
  ertarmPeakForceLbs2  Float?
  ertarmPeakForceLbs3  Float?
  ertarmMaxLbs         Float?
  erntarmPeakForceLbs1 Float?
  erntarmPeakForceLbs2 Float?
  erntarmPeakForceLbs3 Float?
  erntarmMaxLbs        Float?
  starmPeakForceLbs1   Float?
  starmPeakForceLbs2   Float?
  starmPeakForceLbs3   Float?
  starmMaxLbs          Float?
  sntarmPeakForceLbs1  Float?
  sntarmPeakForceLbs2  Float?
  sntarmPeakForceLbs3  Float?
  sntarmMaxLbs         Float?
  gtarmPeakForceLbs1   Float?
  gtarmPeakForceLbs2   Float?
  gtarmPeakForceLbs3   Float?
  gtarmMaxLbs          Float?
  gntarmPeakForceLbs1  Float?
  gntarmPeakForceLbs2  Float?
  gntarmPeakForceLbs3  Float?
  gntarmMaxLbs         Float?
  accelPeakForceLbs1   Float?
  accelPeakForceLbs2   Float?
  accelPeakForceLbs3   Float?
  accelMaxLbs          Float?
  decelPeakForceLbs1   Float?
  decelPeakForceLbs2   Float?
  decelPeakForceLbs3   Float?
  decelMaxLbs          Float?
  totalPrimerMaxLbs    Float?
  irtarmRom            Float?
  irntarmRom           Float?
  ertarmRom            Float?
  erntarmRom           Float?
  tarmTarc             Float?
  ntarmTarc            Float?
  ftarmRom             Float?
  fntarmRom            Float?
  freshLastOuting      String?
  freshThrewToday      String?
  freshRpe             Float?
  freshArmFeels        String?
  freshLocation        String?
  freshWarmedUp        String?
  postThrewToday       String?
  postThrowingActivity String?
  postThrowingTime     String?
  postPitchCount       Float?
  postHighIntentThrows Float?
  postRpe              Float?
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  athlete              String?
  playLevel            String
}

model Trackman {
  id                      Int      @id @default(autoincrement())
  sessionId               String
  sessionName             String   @default("")
  athleteId               String?
  pitchReleaseSpeed       Float?
  pitchType               String?
  pitcherName             String?
  releaseHeight           Float?
  releaseSide             Float?
  extension               Float?
  tilt                    String?
  measuredTilt            String?
  gyro                    Float?
  spinEfficiency          Float?
  inducedVerticalBreak    Float?
  horizontalBreak         Float?
  verticalApproachAngle   Float?
  horizontalApproachAngle Float?
  locationHeight          Float?
  locationSide            Float?
  zoneLocation            String?
  spinRate                Float?
  stuffPlus               Float?
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
  playLevel               String
}

model Intended {
  id                      Int @id @default(autoincrement())
  sessionId               String
  sessionName             String  @default("")
  athleteId               String
  pitchType               String
  intendedX               Float
  intendedY               Float
  actualX                 Float
  actualY                 Float
  distanceIn              Float
  distancePer             Float
  playLevel               String
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
}


model Assessment {
  id                      Int @id @default(autoincrement())
  athleteId               String
  
  // General Information
  height                  String?
  weight                  Int?
  age                     Int?
  primarySport            String?
  currentTrainingReg      String?
  goals                   String?
  primaryPosition         String?
  hopeToGain              String?
  injuryHistory           String?
  coachingStyle           String?
  daysTraining            Int?
  priorSC                 Boolean?
  
  // Mobility Assessment
  overHeadSquat           Int?
  trunkStability          Int?
  sidePlank               Int?
  spinalFlexion           Int?
  activeLegRaise          Int?
  goodMorning             Int?
  lungeOverhead           Int?
  lateralTrunkTilt        Int?
  mobilityNotes           String?

  // Hitting Mechanics Breakdown
  weighShift              Int?
  torsoRot                Int?
  pelvisLoad              Int?
  forwardMove             Int?
  hipShoulder             Int?
  upperRot                Int?
  lowerRot                Int?
  frontArm                Int?
  shoulderConn            Int?
  barrelExt               Int?
  batShoulderAng          Int?
  hittingNotes            String?

  // Pitching Mechanics Breakdown
  startingPos             Int?
  legLiftInitWeightShift  Int?
  engageGlute             Int?
  pushBackLeg             Int?
  vertShinAngViR          Int?
  stayHeel                Int?
  driveDirection          Int?
  outDriveEarly           Int?
  latVertGround           Int?
  backKneeDrive           Int?
  hipClear                Int?
  rotDown                 Int?
  movesIndependent        Int?
  excessiveRot            Int?
  earlyTorsoRot           Int?
  torsoNotSegment         Int?
  bowFlexBow              Int?
  scapularDig             Int?
  reflexivePecFire        Int?
  armSlotTorsoRot         Int?
  rotPerpSpine            Int?
  excessiveTilt           Int?
  throwUpHill             Int?
  armSwingCapMom          Int?
  overlyPronOrSup         Int?
  overlyFlexOrExtWrist    Int?
  elbowInLine             Int?
  lateEarlyFlipUp         Int?
  elbowFlexionHundred     Int?
  fullScapRetractAbduct   Int?
  armDrag                 Int?
  limitedLayback          Int?
  elbowPushForward        Int?
  straightElbowNeutral    Int?
  armWorksInd             Int?
  earlySup                Int?
  workOppGlove            Int?
  retractAbductLanding    Int?
  rotatesIntoPlane        Int?
  leaks                   Int?
  frontFootContact        Int?
  pawback                 Int?
  kneeStabTran            Int?
  kneeStabFron            Int?
  forearmPron             Int?
  shoulderIntern          Int?
  scapRelease             Int?
  thoracicFlex            Int?
  noViolentRecoil         Int?
  overallTempo            Int?
  overallRhythm           Int?
  propTimedIntent         Int?
  cervPos                 Int?
  pitchingNotes           String?
  createdAt               DateTime @default(now())
  // Save the Blob URL
  blobUrl                 String?
}

model HittraxBlast {
  id                      Int @id @default(autoincrement())
  athlete                 String
  blastId                 String
  hittraxId               String
  blastSessionId          String
  hittraxSessionId        String
  squaredUpRate           Float
  attackAngle             Float
  launchAngle             Float
  exitVelo                Float
  result                  String
  potentialVelo           Float
  planeEfficiency         Float
  vertBatAngle            Float
  date                    DateTime
}


model GoalEntry {
  id                      Int @id @default(autoincrement())
  athlete                 String
  goalId                  String
  value                   Float
  date                    DateTime
}

model WeightLog {
  id                      Int @id @default(autoincrement())
  athlete                 String
  weight                  Float
  date                    DateTime
}

model ForceCMJ {
  id                      Int @id @default(autoincrement())
  athlete                 String
  date                    DateTime
  bodyWeight              Float
  reps                    Int
  addLoad                 Float
  jmpHeight               Float
  lowLimbStiff            Float
  peakPowerW              Float
  peakPowerBM             Float
  eccentricDuration       Float
  concretricDuration      Float
  RSImodified             Float
  counterMovement         Float
  CMJstiffness            String
  eccentricDeceleration   String
  P1concentricImp         String
  P2concentricImp         String
  concentricPeakForce     String
  eccentricPeakForce      String
  minimumEccentricForce   String
}

model ForceHop {
  id                      Int @id @default(autoincrement())
  athlete                 String
  date                    DateTime
  bw                      Float
  reps                    Int
  bestActiveStiffness     Float
  bestJumpHeight          Float
  bestRSIF                Float
  bestRSIJ                Float
}

model ForceIMTP {
  id                      Int @id @default(autoincrement())
  athlete                 String
  date                    DateTime
  bw                      Float
  reps                    Int
  netPeakVerticalForce    Float
  peakVerticalForce       Float
  forceAt100ms            Float
  forceAt150ms            Float
  forceAt200ms            Float
}

// (Best RSIF)
model ForceSJ {
  id                      Int @id @default(autoincrement())
  athlete                 String
  date                    DateTime
  bw                      Float
  reps                    Int
  additionalLoad          Float
  peakPowerW              Float
  peakPowerBM             Float
  P1concentricImp         String
  P2concentricImp         String
}