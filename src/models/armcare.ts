// /models/armcare.ts

import mongoose, { Schema, model } from "mongoose";

export interface IArmCare {
  examDate: Date[];
  email: string[];
  armCareId: string[];
  lastName: string[];
  firstName: string[];
  gender: string[];
  dob: Date[];
  heightFt: number[];
  heightIn: number[];
  weightLbs: number[];
  country: string[];
  stateProv: string[];
  position1: string[];
  position2: string[];
  position3: string[];
  position4: string[];
  position5: string[];
  playingLevel: string[];
  throws: string[];
  bats: string[];
  surgery: string[];
  time: string[];
  timezone: string[];
  examType: string[];
  armScore: number[];
  totalStrength: number[];
  irtarmStrength: number[];
  irtarmRs: number[];
  irtarmRecovery: string[];
  ertarmStrength: number[];
  ertarmRs: number[];
  ertarmRecovery: string[];
  starmStrength: number[];
  starmRs: number[];
  starmRecovery: string[];
  gtarmStrength: number[];
  gtarmRs: number[];
  gtarmRecovery: string[];
  shoulderBalance: number[];
  velo: number[];
  svr: number[];
  totalStrengthPost: number[];
  postStrengthLoss: number[];
  totalPctFresh: number[];
  irtarmPostStrength: number[];
  irtarmPostLoss: number[];
  irtarmPctFresh: number[];
  ertarmPostStrength: number[];
  ertarmPostLoss: number[];
  ertarmPctFresh: number[];
  starmPostStrength: number[];
  starmPostLoss: number[];
  starmPctFresh: number[];
  gtarmPostStrength: number[];
  gtarmPostLoss: number[];
  gtarmPctFresh: number[];
  irtarmPeakForceLbs1: number[];
  irtarmPeakForceLbs2: number[];
  irtarmPeakForceLbs3: number[];
  irtarmMaxLbs: number[];
  irntarmPeakForceLbs1: number[];
  irntarmPeakForceLbs2: number[];
  irntarmPeakForceLbs3: number[];
  irntarmMaxLbs: number[];
  ertarmPeakForceLbs1: number[];
  ertarmPeakForceLbs2: number[];
  ertarmPeakForceLbs3: number[];
  ertarmMaxLbs: number[];
  erntarmPeakForceLbs1: number[];
  erntarmPeakForceLbs2: number[];
  erntarmPeakForceLbs3: number[];
  erntarmMaxLbs: number[];
  starmPeakForceLbs1: number[];
  starmPeakForceLbs2: number[];
  starmPeakForceLbs3: number[];
  starmMaxLbs: number[];
  sntarmPeakForceLbs1: number[];
  sntarmPeakForceLbs2: number[];
  sntarmPeakForceLbs3: number[];
  sntarmMaxLbs: number[];
  gtarmPeakForceLbs1: number[];
  gtarmPeakForceLbs2: number[];
  gtarmPeakForceLbs3: number[];
  gtarmMaxLbs: number[];
  gntarmPeakForceLbs1: number[];
  gntarmPeakForceLbs2: number[];
  gntarmPeakForceLbs3: number[];
  gntarmMaxLbs: number[];
  accelPeakForceLbs1: number[];
  accelPeakForceLbs2: number[];
  accelPeakForceLbs3: number[];
  accelMaxLbs: number[];
  decelPeakForceLbs1: number[];
  decelPeakForceLbs2: number[];
  decelPeakForceLbs3: number[];
  decelMaxLbs: number[];
  totalPrimerMaxLbs: number[];
  irtarmRom: number[];
  irntarmRom: number[];
  ertarmRom: number[];
  erntarmRom: number[];
  tarmTarc: number[];
  ntarmTarc: number[];
  ftarmRom: number[];
  fntarmRom: number[];
  freshLastOuting: string[];
  freshThrewToday: string[];
  freshRpe: number[];
  freshArmFeels: string[];
  freshLocation: string[];
  freshWarmedUp: string[];
  postThrewToday: string[];
  postThrowingActivity: string[];
  postThrowingTime: string[];
  postPitchCount: number[];
  postHighIntentThrows: number[];
  postRpe: number[];
}

const armCareSchema = new Schema<IArmCare>(
  {
    examDate: [Date],
    email: [String],
    armCareId: [String],
    lastName: [String],
    firstName: [String],
    gender: [String],
    dob: [Date],
    heightFt: [Number],
    heightIn: [Number],
    weightLbs: [Number],
    country: [String],
    stateProv: [String],
    position1: [String],
    position2: [String],
    position3: [String],
    position4: [String],
    position5: [String],
    playingLevel: [String],
    throws: [String],
    bats: [String],
    surgery: [String],
    time: [String],
    timezone: [String],
    examType: [String],
    armScore: [Number],
    totalStrength: [Number],
    irtarmStrength: [Number],
    irtarmRs: [Number],
    irtarmRecovery: [String],
    ertarmStrength: [Number],
    ertarmRs: [Number],
    ertarmRecovery: [String],
    starmStrength: [Number],
    starmRs: [Number],
    starmRecovery: [String],
    gtarmStrength: [Number],
    gtarmRs: [Number],
    gtarmRecovery: [String],
    shoulderBalance: [Number],
    velo: [Number],
    svr: [Number],
    totalStrengthPost: [Number],
    postStrengthLoss: [Number],
    totalPctFresh: [Number],
    irtarmPostStrength: [Number],
    irtarmPostLoss: [Number],
    irtarmPctFresh: [Number],
    ertarmPostStrength: [Number],
    ertarmPostLoss: [Number],
    ertarmPctFresh: [Number],
    starmPostStrength: [Number],
    starmPostLoss: [Number],
    starmPctFresh: [Number],
    gtarmPostStrength: [Number],
    gtarmPostLoss: [Number],
    gtarmPctFresh: [Number],
    irtarmPeakForceLbs1: [Number],
    irtarmPeakForceLbs2: [Number],
    irtarmPeakForceLbs3: [Number],
    irtarmMaxLbs: [Number],
    irntarmPeakForceLbs1: [Number],
    irntarmPeakForceLbs2: [Number],
    irntarmPeakForceLbs3: [Number],
    irntarmMaxLbs: [Number],
    ertarmPeakForceLbs1: [Number],
    ertarmPeakForceLbs2: [Number],
    ertarmPeakForceLbs3: [Number],
    ertarmMaxLbs: [Number],
    erntarmPeakForceLbs1: [Number],
    erntarmPeakForceLbs2: [Number],
    erntarmPeakForceLbs3: [Number],
    erntarmMaxLbs: [Number],
    starmPeakForceLbs1: [Number],
    starmPeakForceLbs2: [Number],
    starmPeakForceLbs3: [Number],
    starmMaxLbs: [Number],
    sntarmPeakForceLbs1: [Number],
    sntarmPeakForceLbs2: [Number],
    sntarmPeakForceLbs3: [Number],
    sntarmMaxLbs: [Number],
    gtarmPeakForceLbs1: [Number],
    gtarmPeakForceLbs2: [Number],
    gtarmPeakForceLbs3: [Number],
    gtarmMaxLbs: [Number],
    gntarmPeakForceLbs1: [Number],
    gntarmPeakForceLbs2: [Number],
    gntarmPeakForceLbs3: [Number],
    gntarmMaxLbs: [Number],
    accelPeakForceLbs1: [Number],
    accelPeakForceLbs2: [Number],
    accelPeakForceLbs3: [Number],
    accelMaxLbs: [Number],
    decelPeakForceLbs1: [Number],
    decelPeakForceLbs2: [Number],
    decelPeakForceLbs3: [Number],
    decelMaxLbs: [Number],
    totalPrimerMaxLbs: [Number],
    irtarmRom: [Number],
    irntarmRom: [Number],
    ertarmRom: [Number],
    erntarmRom: [Number],
    tarmTarc: [Number],
    ntarmTarc: [Number],
    ftarmRom: [Number],
    fntarmRom: [Number],
    freshLastOuting: [String],
    freshThrewToday: [String],
    freshRpe: [Number],
    freshArmFeels: [String],
    freshLocation: [String],
    freshWarmedUp: [String],
    postThrewToday: [String],
    postThrowingActivity: [String],
    postThrowingTime: [String],
    postPitchCount: [Number],
    postHighIntentThrows: [Number],
    postRpe: [Number],
  },
  {
    timestamps: true,
  }
);

const ArmCare =
  mongoose.models.ArmCare || model<IArmCare>("ArmCare", armCareSchema);

export default ArmCare;
